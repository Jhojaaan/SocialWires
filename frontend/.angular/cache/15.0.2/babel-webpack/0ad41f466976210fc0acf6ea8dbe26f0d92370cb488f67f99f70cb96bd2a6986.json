{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport class TokenInterceptorService {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(req, next) {\n    const tokennizeReq = req.clone({\n      setHeaders: {\n        Authorization: this.authService.getToken()\n      }\n    });\n    return next.handle(tokennizeReq);\n  }\n  static #_ = this.ɵfac = function TokenInterceptorService_Factory(t) {\n    return new (t || TokenInterceptorService)(i0.ɵɵinject(i1.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenInterceptorService,\n    factory: TokenInterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,uBAAuB;EAElCC,YACUC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EACjB;EAEJC,SAAS,CAACC,GAAQ,EAAEC,IAAQ;IAC1B,MAAMC,YAAY,GAAGF,GAAG,CAACG,KAAK,CAAC;MAC7BC,UAAU,EAAC;QACTC,aAAa,EAAE,IAAI,CAACP,WAAW,CAACQ,QAAQ;;KAE3C,CAAC;IAGF,OAAOL,IAAI,CAACM,MAAM,CAACL,YAAY,CAAC;EAClC;EAAC;qBAfUN,uBAAuB;EAAA;EAAA;WAAvBA,uBAAuB;IAAAY,SAAvBZ,uBAAuB;IAAAa,YAFtB;EAAM","names":["TokenInterceptorService","constructor","authService","intercept","req","next","tokennizeReq","clone","setHeaders","Authorization","getToken","handle","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Jhoja\\Desktop\\prueba-tecnica\\frontend\\src\\app\\services\\token-interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n  \n  constructor(\n    private authService: AuthService\n  ) { }\n\n  intercept(req: any, next:any){\n    const tokennizeReq = req.clone({\n      setHeaders:{\n        Authorization: this.authService.getToken();\n      }\n    })\n\n\n    return next.handle(tokennizeReq);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}